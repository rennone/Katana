using System;
using UnityEngine;
using Katana;
// generated by Editor/AnimatorAccess â˜€
namespace AnimatorAccess
{
	[RequireComponent (typeof(Animator))]
	public class PlayerAnimatorController : AMonoBehaviour
	{
		protected Animator _Animator{ get; private set; }

		protected override sealed void Start()
		{
			_Animator = GetComponent<Animator>();
			
			var access   = _Animator.GetBehaviour<PlayerAnimatorStateMachine>();
			if( access != null)
				access.Controller = this;

			base.Start();			
		}

		// Perameters
		// hash values
		protected const int MoveSpeedHash = 526065662;
		protected const int IsJumpHash = 19011116;
		protected const int IsAttackHash = 2145273271;
		protected const int IsJumpAttackHash = -732200224;
		protected const int IsDeadHash = 1270110494;

		// parameter setter getter 
		public float GetMoveSpeed(){ return _Animator.GetFloat(MoveSpeedHash); }
		public void SetMoveSpeed(float value){ _Animator.SetFloat(MoveSpeedHash, value);}
		public bool GetIsJump(){ return _Animator.GetBool(IsJumpHash); }
		public void SetIsJump(bool value){ _Animator.SetBool(IsJumpHash, value);}
		public bool GetIsAttack(){ return _Animator.GetBool(IsAttackHash); }
		public void SetIsAttack(bool value){ _Animator.SetBool(IsAttackHash, value);}
		public bool GetIsJumpAttack(){ return _Animator.GetBool(IsJumpAttackHash); }
		public void SetIsJumpAttack(bool value){ _Animator.SetBool(IsJumpAttackHash, value);}
		public void TriggerIsDead(){ _Animator.SetTrigger (IsDeadHash); } public void ResetIsDead() { _Animator.ResetTrigger (IsDeadHash); }

		// State
		public bool IsAttack_Fire1State(){ return PlayerAnimatorStateMachine.StateIdAttack_Fire1 == _Animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsIdleState(){ return PlayerAnimatorStateMachine.StateIdIdle == _Animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsRunState(){ return PlayerAnimatorStateMachine.StateIdRun == _Animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsJumpState(){ return PlayerAnimatorStateMachine.StateIdJump == _Animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsKickState(){ return PlayerAnimatorStateMachine.StateIdKick == _Animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsScrewKickState(){ return PlayerAnimatorStateMachine.StateIdScrewKick == _Animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsDownState(){ return PlayerAnimatorStateMachine.StateIdDown == _Animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }

		public virtual void OnStateEnterToAttack_Fire1(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateExitFromAttack_Fire1(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
//		public virtual void OnStateMoveAttack_Fire1(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateUpdateAttack_Fire1(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateIkAttack_Fire1(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateEnterToIdle(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateExitFromIdle(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
//		public virtual void OnStateMoveIdle(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateUpdateIdle(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateIkIdle(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateEnterToRun(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateExitFromRun(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
//		public virtual void OnStateMoveRun(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateUpdateRun(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateIkRun(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateEnterToJump(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateExitFromJump(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
//		public virtual void OnStateMoveJump(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateUpdateJump(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateIkJump(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateEnterToKick(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateExitFromKick(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
//		public virtual void OnStateMoveKick(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateUpdateKick(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateIkKick(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateEnterToScrewKick(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateExitFromScrewKick(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
//		public virtual void OnStateMoveScrewKick(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateUpdateScrewKick(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateIkScrewKick(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateEnterToDown(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateExitFromDown(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
//		public virtual void OnStateMoveDown(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateUpdateDown(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }
		public virtual void OnStateIkDown(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){  }


	}
}