using System;
using UnityEngine;
// generated by Editor/AnimatorAccess ☀
namespace AnimatorAccess
{
	[System.Serializable]
	public class PlayerAnimator : StateMachineBehaviour
	{
		protected Animator _animator;

		public void SetAnimator(Animator animator){ _animator = animator; }

		// Perameters
		// hash values
		protected const int MoveSpeedHash = 526065662;
		protected const int IsJumpHash = 19011116;
		protected const int IsAttackHash = 2145273271;
		protected const int IsJumpAttackHash = -732200224;
		protected const int IsDeadHash = 1270110494;

		// parameter setter getter 
		public float GetMoveSpeed(){ return _animator.GetFloat(MoveSpeedHash); }
		public void SetMoveSpeed(float value){ _animator.SetFloat(MoveSpeedHash, value);}
		public bool GetIsJump(){ return _animator.GetBool(IsJumpHash); }
		public void SetIsJump(bool value){ _animator.SetBool(IsJumpHash, value);}
		public bool GetIsAttack(){ return _animator.GetBool(IsAttackHash); }
		public void SetIsAttack(bool value){ _animator.SetBool(IsAttackHash, value);}
		public bool GetIsJumpAttack(){ return _animator.GetBool(IsJumpAttackHash); }
		public void SetIsJumpAttack(bool value){ _animator.SetBool(IsJumpAttackHash, value);}
		public void TriggerIsDead(){ _animator.SetTrigger (IsDeadHash); } public void ResetIsDead() { _animator.ResetTrigger (IsDeadHash); }

		// State
		public const int StateIdAttack_Fire1 = -375459552;
		public const int StateIdIdle = 1432961145;
		public const int StateIdRun = -827840423;
		public const int StateIdJump = 788460410;
		public const int StateIdKick = -1751635351;
		public const int StateIdScrewKick = -106577475;
		public const int StateIdDown = -1783470761;

		public bool IsAttack_Fire1State(){ return StateIdAttack_Fire1 == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsIdleState(){ return StateIdIdle == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsRunState(){ return StateIdRun == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsJumpState(){ return StateIdJump == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsKickState(){ return StateIdKick == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsScrewKickState(){ return StateIdScrewKick == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsDownState(){ return StateIdDown == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }

		public virtual void OnStateEnterToAttack_Fire1(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateExitFromAttack_Fire1(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
//		public virtual void OnStateMoveAttack_Fire1(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateUpdateAttack_Fire1(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateIkAttack_Fire1(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateEnterToIdle(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateExitFromIdle(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
//		public virtual void OnStateMoveIdle(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateUpdateIdle(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateIkIdle(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateEnterToRun(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateExitFromRun(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
//		public virtual void OnStateMoveRun(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateUpdateRun(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateIkRun(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateEnterToJump(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateExitFromJump(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
//		public virtual void OnStateMoveJump(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateUpdateJump(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateIkJump(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateEnterToKick(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateExitFromKick(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
//		public virtual void OnStateMoveKick(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateUpdateKick(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateIkKick(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateEnterToScrewKick(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateExitFromScrewKick(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
//		public virtual void OnStateMoveScrewKick(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateUpdateScrewKick(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateIkScrewKick(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateEnterToDown(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateExitFromDown(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
//		public virtual void OnStateMoveDown(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateUpdateDown(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}
		public virtual void OnStateIkDown(Animator animator, AnimatorStateInfo stateInfo, int layerIndex){}



		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
			//新しいステートに移り変わった時に実行
			switch(stateInfo.fullPathHash)
			{
				// case 
				case StateIdAttack_Fire1 : OnStateEnterToAttack_Fire1(animator, stateInfo, layerIndex); break;
				case StateIdIdle : OnStateEnterToIdle(animator, stateInfo, layerIndex); break;
				case StateIdRun : OnStateEnterToRun(animator, stateInfo, layerIndex); break;
				case StateIdJump : OnStateEnterToJump(animator, stateInfo, layerIndex); break;
				case StateIdKick : OnStateEnterToKick(animator, stateInfo, layerIndex); break;
				case StateIdScrewKick : OnStateEnterToScrewKick(animator, stateInfo, layerIndex); break;
				case StateIdDown : OnStateEnterToDown(animator, stateInfo, layerIndex); break;

			}
		}

		public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
			//ステートが次のステートに移り変わる直前に実行
			switch(stateInfo.fullPathHash)
			{
				// case 
				case StateIdAttack_Fire1 : OnStateExitFromAttack_Fire1(animator, stateInfo, layerIndex); break;
				case StateIdIdle : OnStateExitFromIdle(animator, stateInfo, layerIndex); break;
				case StateIdRun : OnStateExitFromRun(animator, stateInfo, layerIndex); break;
				case StateIdJump : OnStateExitFromJump(animator, stateInfo, layerIndex); break;
				case StateIdKick : OnStateExitFromKick(animator, stateInfo, layerIndex); break;
				case StateIdScrewKick : OnStateExitFromScrewKick(animator, stateInfo, layerIndex); break;
				case StateIdDown : OnStateExitFromDown(animator, stateInfo, layerIndex); break;

			}
		}

		public override void OnStateMachineEnter(Animator animator, int stateMachinePathHash)
		{
			//スクリプトが貼り付けられたステートマシンに遷移してきた時に実行
			
		}

		public override void OnStateMachineExit(Animator animator, int stateMachinePathHash)
		{
			//スクリプトが貼り付けられたステートマシンから出て行く時に実行			
			
		}
		/*
		public override void OnStateMove(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
			//MonoBehaviour.OnAnimatorMoveの直後に実行される
			switch(stateInfo.fullPathHash)
			{
				// case 
				case StateIdAttack_Fire1 : OnStateMoveAttack_Fire1(animator, stateInfo, layerIndex); break;
				case StateIdIdle : OnStateMoveIdle(animator, stateInfo, layerIndex); break;
				case StateIdRun : OnStateMoveRun(animator, stateInfo, layerIndex); break;
				case StateIdJump : OnStateMoveJump(animator, stateInfo, layerIndex); break;
				case StateIdKick : OnStateMoveKick(animator, stateInfo, layerIndex); break;
				case StateIdScrewKick : OnStateMoveScrewKick(animator, stateInfo, layerIndex); break;
				case StateIdDown : OnStateMoveDown(animator, stateInfo, layerIndex); break;

			}
		}
		*/
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
			//最初と最後のフレームを除く、各フレーム単位で実行
			switch(stateInfo.fullPathHash)
			{
				// case 
				case StateIdAttack_Fire1 : OnStateUpdateAttack_Fire1(animator, stateInfo, layerIndex); break;
				case StateIdIdle : OnStateUpdateIdle(animator, stateInfo, layerIndex); break;
				case StateIdRun : OnStateUpdateRun(animator, stateInfo, layerIndex); break;
				case StateIdJump : OnStateUpdateJump(animator, stateInfo, layerIndex); break;
				case StateIdKick : OnStateUpdateKick(animator, stateInfo, layerIndex); break;
				case StateIdScrewKick : OnStateUpdateScrewKick(animator, stateInfo, layerIndex); break;
				case StateIdDown : OnStateUpdateDown(animator, stateInfo, layerIndex); break;

			}
		}

		public override void OnStateIK(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
			//MonoBehaviour.OnAnimatorIKの直後に実行される
			switch(stateInfo.fullPathHash)
			{
				// case 
				case StateIdAttack_Fire1 : OnStateIkAttack_Fire1(animator, stateInfo, layerIndex); break;
				case StateIdIdle : OnStateIkIdle(animator, stateInfo, layerIndex); break;
				case StateIdRun : OnStateIkRun(animator, stateInfo, layerIndex); break;
				case StateIdJump : OnStateIkJump(animator, stateInfo, layerIndex); break;
				case StateIdKick : OnStateIkKick(animator, stateInfo, layerIndex); break;
				case StateIdScrewKick : OnStateIkScrewKick(animator, stateInfo, layerIndex); break;
				case StateIdDown : OnStateIkDown(animator, stateInfo, layerIndex); break;

			}
		}
	}
}