using System;
using UnityEngine;
// generated by Editor/AnimatorAccess ☀
namespace AnimatorAccess
{
	[System.Serializable]
	public class UnityChanActionCheck : StateMachineBehaviour
	{
		protected Animator _animator;

		public void SetAnimator(Animator animator){ _animator = animator; }

		// Perameters
		// hash values
		protected const int NextHash = -1541554430;
		protected const int BackHash = -839094775;

		// parameter setter getter 
		public bool GetNext(){ return _animator.GetBool(NextHash); }
		public void SetNext(bool value){ _animator.SetBool(NextHash, value);}
		public bool GetBack(){ return _animator.GetBool(BackHash); }
		public void SetBack(bool value){ _animator.SetBool(BackHash, value);}

		// State
		public const int StateIdHANDUP00_R = 338571293;
		public const int StateIdJUMP00 = 278711902;
		public const int StateIdJUMP01 = 1738276552;
		public const int StateIdRUN00_F = 195871495;
		public const int StateIdRUN00_L = -344380903;
		public const int StateIdRUN00_R = 292951930;
		public const int StateIdSLIDE00 = -700024351;
		public const int StateIdUMATOBI00 = -1982472366;
		public const int StateIdWAIT00 = -1293954606;
		public const int StateIdWAIT01 = -975642300;
		public const int StateIdWAIT02 = 1557246206;
		public const int StateIdWAIT03 = 735477864;
		public const int StateIdWAIT04 = -1246620213;
		public const int StateIdWALK00_B = 344921400;
		public const int StateIdWALK00_F = 333631777;
		public const int StateIdWALK00_L = -214484929;
		public const int StateIdWALK00_R = 154666332;
		public const int StateIdWIN00 = -1394992538;
		public const int StateIdLOSE00 = 1186915159;
		public const int StateIdDAMAGED00 = 1409647960;
		public const int StateIdDAMAGED01 = 587380174;
		public const int StateIdREFLESH00 = -1213967046;
		public const int StateIdJUMP00B = -971821300;
		public const int StateIdJUMP01B = -553116083;
		public const int StateIdFace_angry1_unitychan = -737699690;
		public const int StateIdFace_sap_unitychan = 679883102;
		public const int StateIdFace_conf_unitychan = -2036183103;
		public const int StateIdFace_smile2_unitychan = -1317547900;
		public const int StateIdFace_eye_close_unitychan = 385519305;
		public const int StateIdFace_smile1_unitychan = 680900229;
		public const int StateIdFace_angry2_unitychan = 1306918551;
		public const int StateIdFace_default_unitychan = -1456140119;
		public const int StateIdFace_disstract2_unitychan = -297649053;
		public const int StateIdFace_disstract1_unitychan = 2006997602;

		public bool IsHANDUP00_RState(){ return StateIdHANDUP00_R == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsJUMP00State(){ return StateIdJUMP00 == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsJUMP01State(){ return StateIdJUMP01 == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsRUN00_FState(){ return StateIdRUN00_F == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsRUN00_LState(){ return StateIdRUN00_L == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsRUN00_RState(){ return StateIdRUN00_R == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsSLIDE00State(){ return StateIdSLIDE00 == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsUMATOBI00State(){ return StateIdUMATOBI00 == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsWAIT00State(){ return StateIdWAIT00 == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsWAIT01State(){ return StateIdWAIT01 == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsWAIT02State(){ return StateIdWAIT02 == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsWAIT03State(){ return StateIdWAIT03 == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsWAIT04State(){ return StateIdWAIT04 == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsWALK00_BState(){ return StateIdWALK00_B == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsWALK00_FState(){ return StateIdWALK00_F == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsWALK00_LState(){ return StateIdWALK00_L == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsWALK00_RState(){ return StateIdWALK00_R == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsWIN00State(){ return StateIdWIN00 == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsLOSE00State(){ return StateIdLOSE00 == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsDAMAGED00State(){ return StateIdDAMAGED00 == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsDAMAGED01State(){ return StateIdDAMAGED01 == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsREFLESH00State(){ return StateIdREFLESH00 == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsJUMP00BState(){ return StateIdJUMP00B == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsJUMP01BState(){ return StateIdJUMP01B == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsFace_angry1_unitychanState(){ return StateIdFace_angry1_unitychan == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsFace_sap_unitychanState(){ return StateIdFace_sap_unitychan == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsFace_conf_unitychanState(){ return StateIdFace_conf_unitychan == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsFace_smile2_unitychanState(){ return StateIdFace_smile2_unitychan == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsFace_eye_close_unitychanState(){ return StateIdFace_eye_close_unitychan == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsFace_smile1_unitychanState(){ return StateIdFace_smile1_unitychan == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsFace_angry2_unitychanState(){ return StateIdFace_angry2_unitychan == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsFace_default_unitychanState(){ return StateIdFace_default_unitychan == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsFace_disstract2_unitychanState(){ return StateIdFace_disstract2_unitychan == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }
		public bool IsFace_disstract1_unitychanState(){ return StateIdFace_disstract1_unitychan == _animator.GetCurrentAnimatorStateInfo(0).fullPathHash; }

		public virtual void OnStateEnterToHANDUP00_R(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromHANDUP00_R(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveHANDUP00_R(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateHANDUP00_R(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkHANDUP00_R(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToJUMP00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromJUMP00(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveJUMP00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateJUMP00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkJUMP00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToJUMP01(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromJUMP01(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveJUMP01(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateJUMP01(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkJUMP01(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToRUN00_F(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromRUN00_F(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveRUN00_F(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateRUN00_F(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkRUN00_F(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToRUN00_L(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromRUN00_L(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveRUN00_L(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateRUN00_L(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkRUN00_L(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToRUN00_R(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromRUN00_R(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveRUN00_R(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateRUN00_R(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkRUN00_R(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToSLIDE00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromSLIDE00(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveSLIDE00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateSLIDE00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkSLIDE00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToUMATOBI00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromUMATOBI00(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveUMATOBI00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateUMATOBI00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkUMATOBI00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToWAIT00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromWAIT00(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveWAIT00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateWAIT00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkWAIT00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToWAIT01(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromWAIT01(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveWAIT01(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateWAIT01(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkWAIT01(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToWAIT02(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromWAIT02(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveWAIT02(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateWAIT02(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkWAIT02(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToWAIT03(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromWAIT03(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveWAIT03(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateWAIT03(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkWAIT03(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToWAIT04(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromWAIT04(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveWAIT04(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateWAIT04(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkWAIT04(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToWALK00_B(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromWALK00_B(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveWALK00_B(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateWALK00_B(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkWALK00_B(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToWALK00_F(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromWALK00_F(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveWALK00_F(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateWALK00_F(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkWALK00_F(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToWALK00_L(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromWALK00_L(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveWALK00_L(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateWALK00_L(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkWALK00_L(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToWALK00_R(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromWALK00_R(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveWALK00_R(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateWALK00_R(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkWALK00_R(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToWIN00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromWIN00(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveWIN00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateWIN00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkWIN00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToLOSE00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromLOSE00(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveLOSE00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateLOSE00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkLOSE00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToDAMAGED00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromDAMAGED00(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveDAMAGED00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateDAMAGED00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkDAMAGED00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToDAMAGED01(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromDAMAGED01(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveDAMAGED01(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateDAMAGED01(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkDAMAGED01(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToREFLESH00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromREFLESH00(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveREFLESH00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateREFLESH00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkREFLESH00(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToJUMP00B(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromJUMP00B(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveJUMP00B(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateJUMP00B(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkJUMP00B(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToJUMP01B(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromJUMP01B(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveJUMP01B(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateJUMP01B(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkJUMP01B(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToFace_angry1_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromFace_angry1_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveFace_angry1_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateFace_angry1_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkFace_angry1_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToFace_sap_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromFace_sap_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveFace_sap_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateFace_sap_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkFace_sap_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToFace_conf_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromFace_conf_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveFace_conf_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateFace_conf_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkFace_conf_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToFace_smile2_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromFace_smile2_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveFace_smile2_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateFace_smile2_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkFace_smile2_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToFace_eye_close_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromFace_eye_close_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveFace_eye_close_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateFace_eye_close_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkFace_eye_close_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToFace_smile1_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromFace_smile1_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveFace_smile1_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateFace_smile1_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkFace_smile1_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToFace_angry2_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromFace_angry2_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveFace_angry2_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateFace_angry2_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkFace_angry2_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToFace_default_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromFace_default_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveFace_default_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateFace_default_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkFace_default_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToFace_disstract2_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromFace_disstract2_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveFace_disstract2_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateFace_disstract2_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkFace_disstract2_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateEnterToFace_disstract1_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateExitFromFace_disstract1_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
//		public virtual void OnStateMoveFace_disstract1_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateUpdateFace_disstract1_unitychan(Animator animator, AnimatorStateInfo stateInfo){}
		public virtual void OnStateIkFace_disstract1_unitychan(Animator animator, AnimatorStateInfo stateInfo){}



		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
			//新しいステートに移り変わった時に実行
			switch(layerIndex)
			{
				// case 
				case StateIdHANDUP00_R : OnStateEnterToHANDUP00_R(animator, stateInfo); break;
				case StateIdJUMP00 : OnStateEnterToJUMP00(animator, stateInfo); break;
				case StateIdJUMP01 : OnStateEnterToJUMP01(animator, stateInfo); break;
				case StateIdRUN00_F : OnStateEnterToRUN00_F(animator, stateInfo); break;
				case StateIdRUN00_L : OnStateEnterToRUN00_L(animator, stateInfo); break;
				case StateIdRUN00_R : OnStateEnterToRUN00_R(animator, stateInfo); break;
				case StateIdSLIDE00 : OnStateEnterToSLIDE00(animator, stateInfo); break;
				case StateIdUMATOBI00 : OnStateEnterToUMATOBI00(animator, stateInfo); break;
				case StateIdWAIT00 : OnStateEnterToWAIT00(animator, stateInfo); break;
				case StateIdWAIT01 : OnStateEnterToWAIT01(animator, stateInfo); break;
				case StateIdWAIT02 : OnStateEnterToWAIT02(animator, stateInfo); break;
				case StateIdWAIT03 : OnStateEnterToWAIT03(animator, stateInfo); break;
				case StateIdWAIT04 : OnStateEnterToWAIT04(animator, stateInfo); break;
				case StateIdWALK00_B : OnStateEnterToWALK00_B(animator, stateInfo); break;
				case StateIdWALK00_F : OnStateEnterToWALK00_F(animator, stateInfo); break;
				case StateIdWALK00_L : OnStateEnterToWALK00_L(animator, stateInfo); break;
				case StateIdWALK00_R : OnStateEnterToWALK00_R(animator, stateInfo); break;
				case StateIdWIN00 : OnStateEnterToWIN00(animator, stateInfo); break;
				case StateIdLOSE00 : OnStateEnterToLOSE00(animator, stateInfo); break;
				case StateIdDAMAGED00 : OnStateEnterToDAMAGED00(animator, stateInfo); break;
				case StateIdDAMAGED01 : OnStateEnterToDAMAGED01(animator, stateInfo); break;
				case StateIdREFLESH00 : OnStateEnterToREFLESH00(animator, stateInfo); break;
				case StateIdJUMP00B : OnStateEnterToJUMP00B(animator, stateInfo); break;
				case StateIdJUMP01B : OnStateEnterToJUMP01B(animator, stateInfo); break;
				case StateIdFace_angry1_unitychan : OnStateEnterToFace_angry1_unitychan(animator, stateInfo); break;
				case StateIdFace_sap_unitychan : OnStateEnterToFace_sap_unitychan(animator, stateInfo); break;
				case StateIdFace_conf_unitychan : OnStateEnterToFace_conf_unitychan(animator, stateInfo); break;
				case StateIdFace_smile2_unitychan : OnStateEnterToFace_smile2_unitychan(animator, stateInfo); break;
				case StateIdFace_eye_close_unitychan : OnStateEnterToFace_eye_close_unitychan(animator, stateInfo); break;
				case StateIdFace_smile1_unitychan : OnStateEnterToFace_smile1_unitychan(animator, stateInfo); break;
				case StateIdFace_angry2_unitychan : OnStateEnterToFace_angry2_unitychan(animator, stateInfo); break;
				case StateIdFace_default_unitychan : OnStateEnterToFace_default_unitychan(animator, stateInfo); break;
				case StateIdFace_disstract2_unitychan : OnStateEnterToFace_disstract2_unitychan(animator, stateInfo); break;
				case StateIdFace_disstract1_unitychan : OnStateEnterToFace_disstract1_unitychan(animator, stateInfo); break;

			}
		}

		public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
			//ステートが次のステートに移り変わる直前に実行
			switch(layerIndex)
			{
				// case 
				case StateIdHANDUP00_R : OnStateExitFromHANDUP00_R(animator, stateInfo); break;
				case StateIdJUMP00 : OnStateExitFromJUMP00(animator, stateInfo); break;
				case StateIdJUMP01 : OnStateExitFromJUMP01(animator, stateInfo); break;
				case StateIdRUN00_F : OnStateExitFromRUN00_F(animator, stateInfo); break;
				case StateIdRUN00_L : OnStateExitFromRUN00_L(animator, stateInfo); break;
				case StateIdRUN00_R : OnStateExitFromRUN00_R(animator, stateInfo); break;
				case StateIdSLIDE00 : OnStateExitFromSLIDE00(animator, stateInfo); break;
				case StateIdUMATOBI00 : OnStateExitFromUMATOBI00(animator, stateInfo); break;
				case StateIdWAIT00 : OnStateExitFromWAIT00(animator, stateInfo); break;
				case StateIdWAIT01 : OnStateExitFromWAIT01(animator, stateInfo); break;
				case StateIdWAIT02 : OnStateExitFromWAIT02(animator, stateInfo); break;
				case StateIdWAIT03 : OnStateExitFromWAIT03(animator, stateInfo); break;
				case StateIdWAIT04 : OnStateExitFromWAIT04(animator, stateInfo); break;
				case StateIdWALK00_B : OnStateExitFromWALK00_B(animator, stateInfo); break;
				case StateIdWALK00_F : OnStateExitFromWALK00_F(animator, stateInfo); break;
				case StateIdWALK00_L : OnStateExitFromWALK00_L(animator, stateInfo); break;
				case StateIdWALK00_R : OnStateExitFromWALK00_R(animator, stateInfo); break;
				case StateIdWIN00 : OnStateExitFromWIN00(animator, stateInfo); break;
				case StateIdLOSE00 : OnStateExitFromLOSE00(animator, stateInfo); break;
				case StateIdDAMAGED00 : OnStateExitFromDAMAGED00(animator, stateInfo); break;
				case StateIdDAMAGED01 : OnStateExitFromDAMAGED01(animator, stateInfo); break;
				case StateIdREFLESH00 : OnStateExitFromREFLESH00(animator, stateInfo); break;
				case StateIdJUMP00B : OnStateExitFromJUMP00B(animator, stateInfo); break;
				case StateIdJUMP01B : OnStateExitFromJUMP01B(animator, stateInfo); break;
				case StateIdFace_angry1_unitychan : OnStateExitFromFace_angry1_unitychan(animator, stateInfo); break;
				case StateIdFace_sap_unitychan : OnStateExitFromFace_sap_unitychan(animator, stateInfo); break;
				case StateIdFace_conf_unitychan : OnStateExitFromFace_conf_unitychan(animator, stateInfo); break;
				case StateIdFace_smile2_unitychan : OnStateExitFromFace_smile2_unitychan(animator, stateInfo); break;
				case StateIdFace_eye_close_unitychan : OnStateExitFromFace_eye_close_unitychan(animator, stateInfo); break;
				case StateIdFace_smile1_unitychan : OnStateExitFromFace_smile1_unitychan(animator, stateInfo); break;
				case StateIdFace_angry2_unitychan : OnStateExitFromFace_angry2_unitychan(animator, stateInfo); break;
				case StateIdFace_default_unitychan : OnStateExitFromFace_default_unitychan(animator, stateInfo); break;
				case StateIdFace_disstract2_unitychan : OnStateExitFromFace_disstract2_unitychan(animator, stateInfo); break;
				case StateIdFace_disstract1_unitychan : OnStateExitFromFace_disstract1_unitychan(animator, stateInfo); break;

			}
		}

		public override void OnStateMachineEnter(Animator animator, int stateMachinePathHash)
		{
			//スクリプトが貼り付けられたステートマシンに遷移してきた時に実行
			
		}

		public override void OnStateMachineExit(Animator animator, int stateMachinePathHash)
		{
			//スクリプトが貼り付けられたステートマシンから出て行く時に実行			
			
		}
		/*
		public override void OnStateMove(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
			//MonoBehaviour.OnAnimatorMoveの直後に実行される
			switch(layerIndex)
			{
				// case 
				case StateIdHANDUP00_R : OnStateMoveHANDUP00_R(animator, stateInfo); break;
				case StateIdJUMP00 : OnStateMoveJUMP00(animator, stateInfo); break;
				case StateIdJUMP01 : OnStateMoveJUMP01(animator, stateInfo); break;
				case StateIdRUN00_F : OnStateMoveRUN00_F(animator, stateInfo); break;
				case StateIdRUN00_L : OnStateMoveRUN00_L(animator, stateInfo); break;
				case StateIdRUN00_R : OnStateMoveRUN00_R(animator, stateInfo); break;
				case StateIdSLIDE00 : OnStateMoveSLIDE00(animator, stateInfo); break;
				case StateIdUMATOBI00 : OnStateMoveUMATOBI00(animator, stateInfo); break;
				case StateIdWAIT00 : OnStateMoveWAIT00(animator, stateInfo); break;
				case StateIdWAIT01 : OnStateMoveWAIT01(animator, stateInfo); break;
				case StateIdWAIT02 : OnStateMoveWAIT02(animator, stateInfo); break;
				case StateIdWAIT03 : OnStateMoveWAIT03(animator, stateInfo); break;
				case StateIdWAIT04 : OnStateMoveWAIT04(animator, stateInfo); break;
				case StateIdWALK00_B : OnStateMoveWALK00_B(animator, stateInfo); break;
				case StateIdWALK00_F : OnStateMoveWALK00_F(animator, stateInfo); break;
				case StateIdWALK00_L : OnStateMoveWALK00_L(animator, stateInfo); break;
				case StateIdWALK00_R : OnStateMoveWALK00_R(animator, stateInfo); break;
				case StateIdWIN00 : OnStateMoveWIN00(animator, stateInfo); break;
				case StateIdLOSE00 : OnStateMoveLOSE00(animator, stateInfo); break;
				case StateIdDAMAGED00 : OnStateMoveDAMAGED00(animator, stateInfo); break;
				case StateIdDAMAGED01 : OnStateMoveDAMAGED01(animator, stateInfo); break;
				case StateIdREFLESH00 : OnStateMoveREFLESH00(animator, stateInfo); break;
				case StateIdJUMP00B : OnStateMoveJUMP00B(animator, stateInfo); break;
				case StateIdJUMP01B : OnStateMoveJUMP01B(animator, stateInfo); break;
				case StateIdFace_angry1_unitychan : OnStateMoveFace_angry1_unitychan(animator, stateInfo); break;
				case StateIdFace_sap_unitychan : OnStateMoveFace_sap_unitychan(animator, stateInfo); break;
				case StateIdFace_conf_unitychan : OnStateMoveFace_conf_unitychan(animator, stateInfo); break;
				case StateIdFace_smile2_unitychan : OnStateMoveFace_smile2_unitychan(animator, stateInfo); break;
				case StateIdFace_eye_close_unitychan : OnStateMoveFace_eye_close_unitychan(animator, stateInfo); break;
				case StateIdFace_smile1_unitychan : OnStateMoveFace_smile1_unitychan(animator, stateInfo); break;
				case StateIdFace_angry2_unitychan : OnStateMoveFace_angry2_unitychan(animator, stateInfo); break;
				case StateIdFace_default_unitychan : OnStateMoveFace_default_unitychan(animator, stateInfo); break;
				case StateIdFace_disstract2_unitychan : OnStateMoveFace_disstract2_unitychan(animator, stateInfo); break;
				case StateIdFace_disstract1_unitychan : OnStateMoveFace_disstract1_unitychan(animator, stateInfo); break;

			}
		}
		*/
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
			//最初と最後のフレームを除く、各フレーム単位で実行
			switch(layerIndex)
			{
				// case 
				case StateIdHANDUP00_R : OnStateUpdateHANDUP00_R(animator, stateInfo); break;
				case StateIdJUMP00 : OnStateUpdateJUMP00(animator, stateInfo); break;
				case StateIdJUMP01 : OnStateUpdateJUMP01(animator, stateInfo); break;
				case StateIdRUN00_F : OnStateUpdateRUN00_F(animator, stateInfo); break;
				case StateIdRUN00_L : OnStateUpdateRUN00_L(animator, stateInfo); break;
				case StateIdRUN00_R : OnStateUpdateRUN00_R(animator, stateInfo); break;
				case StateIdSLIDE00 : OnStateUpdateSLIDE00(animator, stateInfo); break;
				case StateIdUMATOBI00 : OnStateUpdateUMATOBI00(animator, stateInfo); break;
				case StateIdWAIT00 : OnStateUpdateWAIT00(animator, stateInfo); break;
				case StateIdWAIT01 : OnStateUpdateWAIT01(animator, stateInfo); break;
				case StateIdWAIT02 : OnStateUpdateWAIT02(animator, stateInfo); break;
				case StateIdWAIT03 : OnStateUpdateWAIT03(animator, stateInfo); break;
				case StateIdWAIT04 : OnStateUpdateWAIT04(animator, stateInfo); break;
				case StateIdWALK00_B : OnStateUpdateWALK00_B(animator, stateInfo); break;
				case StateIdWALK00_F : OnStateUpdateWALK00_F(animator, stateInfo); break;
				case StateIdWALK00_L : OnStateUpdateWALK00_L(animator, stateInfo); break;
				case StateIdWALK00_R : OnStateUpdateWALK00_R(animator, stateInfo); break;
				case StateIdWIN00 : OnStateUpdateWIN00(animator, stateInfo); break;
				case StateIdLOSE00 : OnStateUpdateLOSE00(animator, stateInfo); break;
				case StateIdDAMAGED00 : OnStateUpdateDAMAGED00(animator, stateInfo); break;
				case StateIdDAMAGED01 : OnStateUpdateDAMAGED01(animator, stateInfo); break;
				case StateIdREFLESH00 : OnStateUpdateREFLESH00(animator, stateInfo); break;
				case StateIdJUMP00B : OnStateUpdateJUMP00B(animator, stateInfo); break;
				case StateIdJUMP01B : OnStateUpdateJUMP01B(animator, stateInfo); break;
				case StateIdFace_angry1_unitychan : OnStateUpdateFace_angry1_unitychan(animator, stateInfo); break;
				case StateIdFace_sap_unitychan : OnStateUpdateFace_sap_unitychan(animator, stateInfo); break;
				case StateIdFace_conf_unitychan : OnStateUpdateFace_conf_unitychan(animator, stateInfo); break;
				case StateIdFace_smile2_unitychan : OnStateUpdateFace_smile2_unitychan(animator, stateInfo); break;
				case StateIdFace_eye_close_unitychan : OnStateUpdateFace_eye_close_unitychan(animator, stateInfo); break;
				case StateIdFace_smile1_unitychan : OnStateUpdateFace_smile1_unitychan(animator, stateInfo); break;
				case StateIdFace_angry2_unitychan : OnStateUpdateFace_angry2_unitychan(animator, stateInfo); break;
				case StateIdFace_default_unitychan : OnStateUpdateFace_default_unitychan(animator, stateInfo); break;
				case StateIdFace_disstract2_unitychan : OnStateUpdateFace_disstract2_unitychan(animator, stateInfo); break;
				case StateIdFace_disstract1_unitychan : OnStateUpdateFace_disstract1_unitychan(animator, stateInfo); break;

			}
		}

		public override void OnStateIK(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
			//MonoBehaviour.OnAnimatorIKの直後に実行される
			switch(layerIndex)
			{
				// case 
				case StateIdHANDUP00_R : OnStateIkHANDUP00_R(animator, stateInfo); break;
				case StateIdJUMP00 : OnStateIkJUMP00(animator, stateInfo); break;
				case StateIdJUMP01 : OnStateIkJUMP01(animator, stateInfo); break;
				case StateIdRUN00_F : OnStateIkRUN00_F(animator, stateInfo); break;
				case StateIdRUN00_L : OnStateIkRUN00_L(animator, stateInfo); break;
				case StateIdRUN00_R : OnStateIkRUN00_R(animator, stateInfo); break;
				case StateIdSLIDE00 : OnStateIkSLIDE00(animator, stateInfo); break;
				case StateIdUMATOBI00 : OnStateIkUMATOBI00(animator, stateInfo); break;
				case StateIdWAIT00 : OnStateIkWAIT00(animator, stateInfo); break;
				case StateIdWAIT01 : OnStateIkWAIT01(animator, stateInfo); break;
				case StateIdWAIT02 : OnStateIkWAIT02(animator, stateInfo); break;
				case StateIdWAIT03 : OnStateIkWAIT03(animator, stateInfo); break;
				case StateIdWAIT04 : OnStateIkWAIT04(animator, stateInfo); break;
				case StateIdWALK00_B : OnStateIkWALK00_B(animator, stateInfo); break;
				case StateIdWALK00_F : OnStateIkWALK00_F(animator, stateInfo); break;
				case StateIdWALK00_L : OnStateIkWALK00_L(animator, stateInfo); break;
				case StateIdWALK00_R : OnStateIkWALK00_R(animator, stateInfo); break;
				case StateIdWIN00 : OnStateIkWIN00(animator, stateInfo); break;
				case StateIdLOSE00 : OnStateIkLOSE00(animator, stateInfo); break;
				case StateIdDAMAGED00 : OnStateIkDAMAGED00(animator, stateInfo); break;
				case StateIdDAMAGED01 : OnStateIkDAMAGED01(animator, stateInfo); break;
				case StateIdREFLESH00 : OnStateIkREFLESH00(animator, stateInfo); break;
				case StateIdJUMP00B : OnStateIkJUMP00B(animator, stateInfo); break;
				case StateIdJUMP01B : OnStateIkJUMP01B(animator, stateInfo); break;
				case StateIdFace_angry1_unitychan : OnStateIkFace_angry1_unitychan(animator, stateInfo); break;
				case StateIdFace_sap_unitychan : OnStateIkFace_sap_unitychan(animator, stateInfo); break;
				case StateIdFace_conf_unitychan : OnStateIkFace_conf_unitychan(animator, stateInfo); break;
				case StateIdFace_smile2_unitychan : OnStateIkFace_smile2_unitychan(animator, stateInfo); break;
				case StateIdFace_eye_close_unitychan : OnStateIkFace_eye_close_unitychan(animator, stateInfo); break;
				case StateIdFace_smile1_unitychan : OnStateIkFace_smile1_unitychan(animator, stateInfo); break;
				case StateIdFace_angry2_unitychan : OnStateIkFace_angry2_unitychan(animator, stateInfo); break;
				case StateIdFace_default_unitychan : OnStateIkFace_default_unitychan(animator, stateInfo); break;
				case StateIdFace_disstract2_unitychan : OnStateIkFace_disstract2_unitychan(animator, stateInfo); break;
				case StateIdFace_disstract1_unitychan : OnStateIkFace_disstract1_unitychan(animator, stateInfo); break;

			}
		}
	}
}